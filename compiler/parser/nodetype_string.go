// Code generated by "stringer -type=Nodetype"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NODE_UNDEF-0]
	_ = x[NODE_INTEGER-1]
	_ = x[NODE_STRING-2]
	_ = x[NODE_BOOLEAN-3]
	_ = x[NODE_UNARY-4]
	_ = x[NODE_BINARY-5]
	_ = x[NODE_IF-6]
	_ = x[NODE_COND-7]
	_ = x[NODE_LET-8]
	_ = x[NODE_CLAUSE-9]
	_ = x[NODE_BIND-10]
	_ = x[NODE_VARIABLE-11]
	_ = x[NODE_EMPTY-12]
	_ = x[NODE_DEFINE-13]
	_ = x[NODE_QUOTE-14]
	_ = x[NODE_MATCH-15]
	_ = x[NODE_MATCHCLAUSE-16]
}

const _Nodetype_name = "NODE_UNDEFNODE_INTEGERNODE_STRINGNODE_BOOLEANNODE_UNARYNODE_BINARYNODE_IFNODE_CONDNODE_LETNODE_CLAUSENODE_BINDNODE_VARIABLENODE_EMPTYNODE_DEFINENODE_QUOTENODE_MATCHNODE_MATCHCLAUSE"

var _Nodetype_index = [...]uint8{0, 10, 22, 33, 45, 55, 66, 73, 82, 90, 101, 110, 123, 133, 144, 154, 164, 180}

func (i Nodetype) String() string {
	if i >= Nodetype(len(_Nodetype_index)-1) {
		return "Nodetype(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Nodetype_name[_Nodetype_index[i]:_Nodetype_index[i+1]]
}
