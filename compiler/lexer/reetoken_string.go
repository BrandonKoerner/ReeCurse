// Code generated by "stringer -type=ReeToken"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOK_UNDEF-0]
	_ = x[TOK_SHEBANG-1]
	_ = x[TOK_LPAREN-2]
	_ = x[TOK_RPAREN-3]
	_ = x[TOK_LITINT-4]
	_ = x[TOK_LITNUM-5]
	_ = x[TOK_LITSTR-6]
	_ = x[TOK_IDENT-7]
	_ = x[TOK_KEYWORD-8]
	_ = x[TOK_KEYOP-9]
	_ = x[TOK_EMPTY-10]
	_ = x[TOK_TRUE-11]
	_ = x[TOK_FALSE-12]
	_ = x[TOK_LITCHAR-13]
	_ = x[TOK_SUPRESS-14]
	_ = x[SYM_LITCHAR-15]
	_ = x[SYM_LITINT-16]
	_ = x[SYM_LITSTR-17]
	_ = x[SYM_TRUE-18]
	_ = x[SYM_FALSE-19]
	_ = x[SYM_EMPTY-20]
	_ = x[TOK_SYMBOL-21]
	_ = x[TOK_PERIOD-22]
	_ = x[KEY_UNDEF-23]
	_ = x[KEY_TYPE-24]
	_ = x[KEY_LET-25]
	_ = x[KEY_LETREC-26]
	_ = x[KEY_IF-27]
	_ = x[KEY_DEFINE-28]
	_ = x[KEY_COND-29]
	_ = x[KEY_MATCH-30]
	_ = x[KEY_ELSE-31]
	_ = x[KEY_LAMBDA-32]
	_ = x[OP_UNDEF-33]
	_ = x[OP_ADD-34]
	_ = x[OP_SUB-35]
	_ = x[OP_MUL-36]
	_ = x[OP_DIV-37]
	_ = x[OP_ZERO-38]
	_ = x[OP_ABS-39]
	_ = x[OP_GT-40]
	_ = x[OP_GTEQ-41]
	_ = x[OP_LTEQ-42]
	_ = x[OP_LT-43]
	_ = x[OP_INC-44]
	_ = x[OP_DEC-45]
	_ = x[OP_EQ-46]
	_ = x[OP_NEQ-47]
	_ = x[OP_PRINT-48]
	_ = x[OP_BOX-49]
	_ = x[OP_UNBOX-50]
	_ = x[OP_CONS-51]
	_ = x[OP_CAR-52]
	_ = x[OP_CDR-53]
	_ = x[OP_QUOTE-54]
	_ = x[OP_QUASIQUOTE-55]
	_ = x[OP_UNQUOTE-56]
	_ = x[OP_UNQUOTESPLICE-57]
	_ = x[OP_CHECKTYPE-58]
	_ = x[OP_MOD-59]
	_ = x[OP_NOT-60]
	_ = x[OP_BITAND-61]
	_ = x[OP_BITOR-62]
	_ = x[OP_BITXOR-63]
	_ = x[OP_BITSHL-64]
	_ = x[OP_BITSHR-65]
	_ = x[OP_QUESTION-66]
	_ = x[TOK_EOF-67]
}

const _ReeToken_name = "TOK_UNDEFTOK_SHEBANGTOK_LPARENTOK_RPARENTOK_LITINTTOK_LITNUMTOK_LITSTRTOK_IDENTTOK_KEYWORDTOK_KEYOPTOK_EMPTYTOK_TRUETOK_FALSETOK_LITCHARTOK_SUPRESSSYM_LITCHARSYM_LITINTSYM_LITSTRSYM_TRUESYM_FALSESYM_EMPTYTOK_SYMBOLTOK_PERIODKEY_UNDEFKEY_TYPEKEY_LETKEY_LETRECKEY_IFKEY_DEFINEKEY_CONDKEY_MATCHKEY_ELSEKEY_LAMBDAOP_UNDEFOP_ADDOP_SUBOP_MULOP_DIVOP_ZEROOP_ABSOP_GTOP_GTEQOP_LTEQOP_LTOP_INCOP_DECOP_EQOP_NEQOP_PRINTOP_BOXOP_UNBOXOP_CONSOP_CAROP_CDROP_QUOTEOP_QUASIQUOTEOP_UNQUOTEOP_UNQUOTESPLICEOP_CHECKTYPEOP_MODOP_NOTOP_BITANDOP_BITOROP_BITXOROP_BITSHLOP_BITSHROP_QUESTIONTOK_EOF"

var _ReeToken_index = [...]uint16{0, 9, 20, 30, 40, 50, 60, 70, 79, 90, 99, 108, 116, 125, 136, 147, 158, 168, 178, 186, 195, 204, 214, 224, 233, 241, 248, 258, 264, 274, 282, 291, 299, 309, 317, 323, 329, 335, 341, 348, 354, 359, 366, 373, 378, 384, 390, 395, 401, 409, 415, 423, 430, 436, 442, 450, 463, 473, 489, 501, 507, 513, 522, 530, 539, 548, 557, 568, 575}

func (i ReeToken) String() string {
	if i >= ReeToken(len(_ReeToken_index)-1) {
		return "ReeToken(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ReeToken_name[_ReeToken_index[i]:_ReeToken_index[i+1]]
}
